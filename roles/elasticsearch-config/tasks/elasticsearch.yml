---

- name: "Create list of Elasticsearch master ip to use with discovery."
  set_fact:
    unicast_hosts: "{% for host in groups['es-master'] %}{{ hostvars[host]['ansible_default_ipv4']['address'] }}{% if not loop.last %}, {% endif %}{% endfor %}"

- name: JVM Min and Max Memory to lock on.
  set_fact:
    jvm_memory: "{{ ansible_memtotal_mb // 2000 }}g"
    
- debug: var=unicast_hosts

- name: Configure Elasticsearch discovery.
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: "^cluster.name.*$"
    insertafter: EOF
    line: "cluster.name: {{ elasticsearch_config_cluster_name }}"
    state: present

- name: Configure Elasticsearch discovery.
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: "^discovery.zen.ping.unicast.hosts.*$"
    insertafter: EOF
    line: "discovery.zen.ping.unicast.hosts: [ {{ unicast_hosts }} ]"
    state: present

- name: Configure Elasticsearch network.host.
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: "^network.host.*$"
    insertafter: EOF
    line: "network.host: [ _local_, _site_, _{{ ansible_default_ipv4['interface'] }}_ ]"
    state: present
    
- name: Configure Elasticsearch network.host.
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: "^discovery.zen.minimum_master_nodes.*$"
    insertafter: EOF
    line: "discovery.zen.minimum_master_nodes: {{ groups['es-master'] | length // 2 + 1 }}"
    state: present

- name: Configure Elasticsearch node.master.
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: "^node.master.*$"
    insertafter: EOF
    line: "node.master: {% if elasticsearch_config_node_master %}true{% else %}false{% endif %}"
    state: present

- name: Configure Elasticsearch node.data.
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: "^node.data.*$"
    insertafter: EOF
    line: "node.data: {% if elasticsearch_config_node_data %}true{% else %}false{% endif %}"
    state: present

- name: Configure Elasticsearch boostrap.memory_lock.
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: "^bootstrap.memory_lock.*$"
    insertafter: EOF
    line: "bootstrap.memory_lock: true"
    state: present
